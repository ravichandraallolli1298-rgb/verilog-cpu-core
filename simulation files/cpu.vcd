$date
	Wed Aug 20 20:07:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # zero $end
$var wire 4 $ rs2 [3:0] $end
$var wire 4 % rs1 [3:0] $end
$var wire 32 & read_data2 [31:0] $end
$var wire 32 ' read_data1 [31:0] $end
$var wire 4 ( rd [3:0] $end
$var wire 5 ) pc_out [4:0] $end
$var wire 32 * instruction [31:0] $end
$var wire 32 + alu_result [31:0] $end
$var wire 3 , alu_ctrl [2:0] $end
$scope module alu_inst $end
$var wire 3 - alu_ctrl [2:0] $end
$var wire 32 . b [31:0] $end
$var wire 32 / a [31:0] $end
$var reg 32 0 result [31:0] $end
$var reg 1 # zero $end
$upscope $end
$scope module imem $end
$var wire 32 1 instr [31:0] $end
$var wire 5 2 addr [4:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 5 3 pc_out [4:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ! clk $end
$var wire 32 4 read_data1 [31:0] $end
$var wire 32 5 read_data2 [31:0] $end
$var wire 4 6 read_reg1 [3:0] $end
$var wire 4 7 read_reg2 [3:0] $end
$var wire 1 8 reg_write $end
$var wire 1 " rst $end
$var wire 32 9 write_data [31:0] $end
$var wire 4 : write_reg [3:0] $end
$var integer 32 ; i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 ;
b1 :
b0 9
18
b0 7
b1 6
b0 5
b0 4
b0 3
b0 2
b100010000000000000000 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b100010000000000000000 *
b0 )
b1 (
b0 '
b0 &
b1 %
b0 $
1#
1"
0!
$end
#5
b10000 ;
1!
#10
0!
0"
#15
b1 ,
b1 -
b10 (
b10 :
b10 %
b10 6
b1000100000000000000001 *
b1000100000000000000001 1
b1 )
b1 2
b1 3
1!
#20
0!
#25
b10 ,
b10 -
b11 (
b11 :
b11 %
b11 6
b1100110000000000000010 *
b1100110000000000000010 1
b10 )
b10 2
b10 3
1!
#30
0!
#35
b11 ,
b11 -
b100 (
b100 :
b100 %
b100 6
b10001000000000000000011 *
b10001000000000000000011 1
b11 )
b11 2
b11 3
1!
#40
0!
#45
b100 ,
b100 -
b101 (
b101 :
b101 %
b101 6
b10101010000000000000100 *
b10101010000000000000100 1
b100 )
b100 2
b100 3
1!
#50
0!
#55
bx ,
bx -
bx (
bx :
bx &
bx .
bx 5
bx $
bx 7
bx '
bx /
bx 4
bx %
bx 6
bx *
bx 1
b101 )
b101 2
b101 3
1!
#60
0!
#65
b110 )
b110 2
b110 3
1!
#70
0!
#75
b111 )
b111 2
b111 3
1!
#80
0!
#85
b1000 )
b1000 2
b1000 3
1!
#90
0!
#95
b1001 )
b1001 2
b1001 3
1!
#100
0!
#105
b1010 )
b1010 2
b1010 3
1!
#110
0!
#115
b1011 )
b1011 2
b1011 3
1!
#120
0!
#125
b1100 )
b1100 2
b1100 3
1!
#130
0!
#135
b1101 )
b1101 2
b1101 3
1!
#140
0!
#145
b1110 )
b1110 2
b1110 3
1!
#150
0!
#155
b1111 )
b1111 2
b1111 3
1!
#160
0!
#165
b10000 )
b10000 2
b10000 3
1!
#170
0!
#175
b10001 )
b10001 2
b10001 3
1!
#180
0!
#185
b10010 )
b10010 2
b10010 3
1!
#190
0!
#195
b10011 )
b10011 2
b10011 3
1!
#200
0!
#205
b10100 )
b10100 2
b10100 3
1!
#210
0!
